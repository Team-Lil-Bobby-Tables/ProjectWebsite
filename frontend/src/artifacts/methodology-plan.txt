Development Methodology Plan

Our team has decided to develop our project with an agile methodology/mindset. This is the third year that this project has been developed by a senior project team, and our sponsors have set up a system that is best fit by an agile approach. Currently, our team feels most comfortable implementing a scrum framework for our development process. This document outlines the reasons we chose this framework, and how we plan to implement it throughout the year.

Planned Activities and Artifacts
Our team has identified 3 mandatory meetings throughout the week. Each of these meetings start with a standup where each team member will give an update of the progress they’ve made since our last meeting, what they plan to accomplish by our next meeting, and any blockers or impediments they feel they have that could stop them from making this progress. Our project manager at the time (which will be explained later in this document) is responsible for keeping these meetings clear, concise, and on track. They are also responsible for thinking longer term than just one meeting to the next, but how the team is progressing in regards to our long term goals.

The team intends to split our semesters into 2 week sprints. The beginning of these sprints will begin with a retrospective of the previous sprint. This will be a time for the team to talk about the processes and practices that we like/helped us in driving to our goals, as well as the things we would like to change or improve upon. These first-sprint meetings will also give us time to plan what activities and deliverables we intend to complete during the upcoming sprint. 

Anytime the team plans on implementing new features that have not previously been discussed, the team will do a planning poker session to estimate the size of various tasks that need to be completed. These meetings will require full attendance, to make sure that all team members are in agreement for our estimations of tasks, their difficulty, and possibly the pre-assignment of some tasks based on individual comfortability.

Finally, notes will be taken during each of these meetings to serve as a record for the team, sponsors, coach, and other stakeholders of our progress throughout the year. These notes will drive artifacts like our weekly 4-ups, updates to our team website, and other progress reports that will be made available to our stakeholders.

Roles
We have decided to have multiple specific roles throughout the year.

Project Manager - The project manager is responsible for planning/running meetings. It is their job to keep these meetings on track, and ensure that the team is driving towards progress. If a team member brings up any blockers during the standup portion of a meeting, it is first the responsibility of the project manager to help find a path forward to move past the blocker. The project manager should also aim to keep the team on track towards long-term goals. It is their responsibility to fully understand the goals the team set for ourselves at the beginning of our sprint, and keep us driving towards those goals consistently. Finally, the project manager is also accountable for helping the team to implement feedback from ourselves during our retrospectives, our coach, and our sponsors. (These responsibilities are subject to change as the team sees fit throughout the course of the year) Our team has decided the best course of action is to rotate project managers every 1-2 sprints. This will give multiple team members an opportunity to take a turn in project management. This will help keep the team fresh and benefit from multiple perspectives/styles. The two students that will primarily rotate this responsibility is Max Burdett and Rhamsez Thevenin.

Development Lead - The development lead is responsible for understanding the progress of all aspects of engineering/technical development. This person will keep track of feature progress, bugs, and will be a part of all design discussions before a feature is allowed to be implemented. At any given time, the development lead should be able to answer any questions related to the engineering process or feature implementation. Finally, the development lead will also help manage any individual development concerns and will be a main point of contact for the development team. (These responsibilities are subject to change as the team sees fit throughout the course of the year) Our team has decided to appoint a single primary development lead for most of the course of our senior project. We believe it is best to keep a single development lead throughout the year to keep a consistent understanding on the engineering side of our project. The primary development lead for our project is Justin Jantzi.

Sponsor Communication Lead - Our communication lead is the primary point of contact for the coach/sponsors and the student team. This person is responsible for maintaining consistent communication on project progress, delivering assigned deliverables on time, and taking care of any other communication needs throughout our project. This also includes setting up services like Discord, being the primary contact for asking questions, or getting clarification when the team isn’t sure how to proceed and requires clarification from the sponsor or coach. This person will work closely with the project manager and development lead to relay status updates as needed. (These responsibilities are subject to change as the team sees fit throughout the course of the year) Our team has decided to appoint a single primary communication lead for the course of the year. We feel that it is best to keep a single point of contact to keep communication clear, and consistent. The primary communication lead for our project is James McGrath.

Standards and Quality Practices
Our team will keep multiple standards throughout our development process. Firstly, our team will keep clear communication through Discord, email, and other services to keep our communication as consistent as possible. Our scrum framework also means that we will keep consistent standup meetings and retrospectives that will support our drive for quality work.

From a development perspective, our team will keep multiple standards to ensure quality, bug free features. We will implement simple static code tests such as unit tests for classes, methods, features, components, etc. at every stage of our development. We will also require local testing, and proof of success before code is allowed to be merged into our master branches. In addition to this, we will encourage frequent demo’s for large feature releases so that the entire development team is up to date on the current state of our implementations. This will also give individual team members a platform to ask questions, get clarification, or give feedback at a time in the development process that limits risk to other aspects of the project.

Tools
Our team will use multiple tools that support our agile methodology. Our development team will primarily rely on Jira. Our stories, planning poker sessions, sprint progress, velocity, and more will all be tracked through this platform. It will help us keep a consistent place to see the state of our progress in the short, and long term of our development.

We will also use Discord as a primary source of communication. Discord is already an extremely easy, simple to use tool that allows us direct access to each other, our coach, and our sponsors if we need to make contact outside of our dedicated meeting times.

We have decided to use Figma to help aid our design process. Figma is a great tool to help conceptualize the design of various pages, features, and more. This is a tool that our sponsors are comfortable interacting with, and we are comfortable using. This should help us provide better insight into the vision we have for our implementations, and give us a chance to quickly implement feedback from our coach or sponsors before we begin development.

Finally, our team will be using Github to host our project, and our team website. Github is an excellent tool that’s made for easy software development. Version control is an important aspect of agile development, and Github will let us keep track of multiple feature/story branches and allow us to work concurrently to implement new features, fix bugs, and drive development progress forward.

Metrics and Measurements
We will use multiple traditional agile metrics and measurements for our project. From sprint to sprint, our team will routinely measure our development velocity. This velocity will be a consistent topic during our sprint retrospectives, and we will use it to drive our next planned velocity, or use it to help address any issues we have during a development cycle. Another traditional agile metric is using a burndown/burnup chart. These help to measure the teams overall task completion during an individual sprint, and compared to the overall project scope. Similar to our velocity, these metrics will help the team/project manager make decisions on what work/tasks need to be completed during our sprint planning sessions.

Another thing we plan to measure is team morale. During our sprint retrospectives, team members will complete a short-hand questionnaire that measures the satisfaction of individual members during our project. This will allow us to make specific decisions around project roles, and task assignments that will aim to maximize the overall team morale. A higher team morale will also likely result in a higher velocity, and even less bugs in our final product because of our personal enjoyment in what we’re working on.

Finally, a metric we plan on implementing is our pair-programming ratio. Our team has a very diverse development background. Some of us are much more confident/comfortable working in certain areas of the project than others. As such we will aim to implement pair programming to help educate developers without as much experience, and also ensure that no ONE person is the only one with domain knowledge of a specific feature/part of the project. In some cases, a low pair-programming ratio may not be a problem. If the entire team is confident on the implementation of a specific feature (and is all in agreement on how that feature should be implemented), it will likely be redundant and possibly an extra waste of time to try to implement pair programming.

Conclusion
In conclusion, we believe that an agile/scrum framework is best for our team. Not only was it previously implemented in our project and our sponsors are comfortable with it, but we as the student team believe that the tools and strengths of our individual team members greatly align with an agile process. The agile framework also encourages iterative improvements and as such, our activities, roles, responsibilities, tools, metrics, and more are all subject to change/improvement as we see fit throughout our project.
